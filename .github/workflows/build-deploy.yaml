name: Build Deploy Containers

on:

  # Rebuild once a week
  schedule: 
  - cron: 0 0 * * 0

  # Publish packages on release
  release:
    types: [published]

  # Test on pull request
  pull_request: []

  # On push to main we build and deploy images
  push:
    branches:
    - main

jobs:
  build:
    permissions:
      packages: write

    # This is the container URI without a tag
    env:
      container: ghcr.io/converged-computing/flux-go
    runs-on: ubuntu-latest
    name: Build
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Include the golang bindings for example
    - name: Build Containers
      run: |
        cp ./.devcontainer/Dockerfile ./Dockerfile
        echo "USER root" >> ./Dockerfile
        docker build -t ${{ env.container }}-base:latest .
        echo "WORKDIR /code" >> ./Dockerfile
        echo "COPY . /code" >> ./Dockerfile
        echo "RUN make" >> ./Dockerfile     
        echo 'USER $USERNAME' >> ./Dockerfile
        docker build -t ${{ env.container }}:latest .

    - name: GHCR Login
      if: (github.event_name != 'pull_request')
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Tag and Push Release Image
      if: (github.event_name == 'release')
      run: |
        tag=${GITHUB_REF#refs/tags/}
        echo "Tagging and releasing ${{ env.container }}:${tag}"
        docker tag ${{ env.container }}:latest ${{ env.container }}:${tag}
        docker tag ${{ env.container }}-base:latest ${{ env.container }}-base:${tag}
        docker push ${{ env.container }}:${tag}
        docker push ${{ env.container }}-base:${tag}

    - name: Deploy
      if: (github.event_name != 'pull_request')
      run: |
        docker push ${{ env.container }}:latest
        docker push ${{ env.container }}-base:latest
